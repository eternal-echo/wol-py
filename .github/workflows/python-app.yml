name: Build and Publish Executable

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pyinstaller
          pip install -r requirements.txt
      
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile ./src/wol.py

      - name: Prepare artifacts (Linux and macOS)
        run: |
          mv ./dist/wol ./dist/wol-${{ github.run_number }}-${{ matrix.os }}
        shell: bash
        if: ${{ matrix.os != 'windows-latest' }}

      - name: Prepare artifacts (Windows)
        run: |
          mv ./dist/wol.exe ./dist/wol-${{ github.run_number }}-${{ matrix.os }}.exe
        shell: bash
        if: ${{ matrix.os == 'windows-latest' }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wol-${{ github.run_number }}-${{ matrix.os }}
          path: |
            ./dist/*

  create-release:
    name: Create and upload release
    needs: build-and-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/download-artifact@v3
        with:
          name: |
            wol-*
      
      - name: Upload to Release
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wol-${{ github.run_number }}-${{ matrix.os }}
          asset_name: wol-${{ github.run_number }}-${{ matrix.os }}
          asset_content_type: application/octet-stream
